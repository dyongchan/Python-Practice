변수(variable) : 값의 주소값을 넣게되는 구조
- 객체를 가리킨다.
- method를 적용할 수 있다.

a = [1,2,3] # 하나의 객체를 생성하고 주소값을 a에 넣어줌
b = a # 객체는 하나로 유지, 주소값을 b에 넣어줌
a[1] = 4 # b는 그대로 유지될까? / b도 변경됨
- a,b는 객체의 주소를 담고 있다. (같은 객체를 바라보고 있다.)
- 객체의 요소 자체가 변경되었으므로 b가 가리키는 객체는 변경된 객체가 된다.

print(id(a))
print(id(a)) # 주소값 확인가능
print(a is b) # 같은 주소값을 갖고있는가? bool 로 나타내어짐

- 주소가 아닌 복사의 개념
1.
a = [1,2,3]
b = a[:] # slicing 을 통하여 새로운 리스트를 넣어서 준다.
- 주소값은 다르지만 값은 같다 

2.
from copy import copy # 라이브러리를 가져옴
a = [1,2,3]
b = copy(a) # 주소가 아닌 값을 복사해서 새로운 리스트로 할당

- 변수를 만드는 여러 방법

1. a, b or (a, b) = ('python', 'life') # tuple로 각각 할당
2. [a, b] = ['python', 'life'] # list로 할당
3. a = b = 'hello'
4. 각 변수를 바꾸기
a = 3
b = 5
a,b = b,a # 주소값을 바꾸는 임시변수를 만들지 않아도 가능
